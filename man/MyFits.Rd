% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MyFits.R
\name{MyFits}
\alias{MyFits}
\title{Fits either an inverse quadratic, a bell-shaped or a waiting-in-line curve to data.}
\usage{
MyFits(x, y, data, fit = "Inverse_quad", model = FALSE, coords = FALSE,
  start.a = NA, start.b = NA, start.c = NA)
}
\arguments{
\item{x}{x values}

\item{y}{y values}

\item{data}{data frame with the x and y values}

\item{fit}{Name of the fit equation to be used. Either \code{Inverse_quad} for an inverse quadratic equation \code{y ~ x / (a + b*x + c*x^2)}, \code{Bell} for a bell shaped curve \code{y ~ amp * exp(-0.5*((x - xmean)/xsd)^2)}, or \code{Wait} for waiting-in-line \code{y ~ A * kw * x * exp(-kw*x)}, after Ritchie 2008).}

\item{model}{Logical. Should the \code{nls} model be returned? Default is FALSE, only coefficient and R2 are returned.}

\item{coords}{Logical. If \code{TRUE} the model predictions are returned as data frame. Usful for plotting the model result. See \code{stat_MyFits} for a ggplot2-implementation.}

\item{start.a}{optional initial guess for the curve fit coefficients \code{a}, \code{amp}, or \code{A} (depends on which equation was selected). Default is NA, i.e. an internal guess is used to determine \code{start.a}.}

\item{start.b}{optional initial guess for the second curve fit coefficient for the \code{b}, \code{xmean} or \code{kw} parameter. Default is NA, i.e. an internal guess is used to determine \code{start.b}.}

\item{start.c}{optional initial guess for the third curve fit coefficient. Either \code{c} in case of \code{Inverse_quad} or \code{xsd} in case of \code{Bell}. Not used for \code{Wait} as it only uses two coefficients. Default is NA, i.e. an internal guess is used to determine \code{start.c}.}
}
\description{
Fits one of three curves to x, y data using \code{nls}. Available fitting functions are inverse quadratic, bell-shaped, or waiting-in-line.
}
\examples{
d <- data.frame(x = 1:10,
                y = c(0.5, 2, 10, 9, 8, 6.5, 5, 4, 3, 2.5))
MyFits(x = x, y = y, data = d)
MyFits(x = x, y = y, data = d, start.a = 1.5, start.b = 0.5, start.c = 0.05)
MyFits(x = x, y = y, data = d, fit = "Wait")
nls.fit <- MyFits(x = x, y = y, data = d, fit = "Inverse_quad", model = TRUE)
my.x <- seq(min(d$x), max(d$x), length.out = 100)
my.predicted <- predict(nls.fit, data.frame(x = my.x))
mod.pred <- data.frame(x = my.x,
                       y = my.predicted)
plot(d)
lines(y ~ x, data = mod.pred)
}
\seealso{
\code{nls}
}
